package cn.showclear.www.service.validate;

import cn.showclear.www.common.constant.Message;
import cn.showclear.www.pojo.base.*;

/**
 * 用户输入数据校验业务
 */
public interface ValidateService {

    /**
     * 用户数据校验
     * @param userDo
     * @return
     */
    void validateUser(UserDo userDo) throws IllegalArgumentException;

    /**
     * 发布物品前输入数据校验
     * @param productDo
     * @return
     */
    void validateProductRelease(ProductDo productDo) throws IllegalArgumentException;

    /**
     * 发布求购信息前输入数据校验
     * @param demandInfoDo
     * @return
     */
    void validateDemandInfoRelease(DemandInfoDo demandInfoDo) throws IllegalArgumentException;

    /**
     * 搜索物品前输入数据校验
     * @param productDo
     * @return
     */
    void validateProductSearch(ProductDo productDo) throws IllegalArgumentException;

    /**
     * 搜索求购信息前数据校验
     * @param demandInfoDo
     * @return
     */
    void validateDemandInfoSearch(DemandInfoDo demandInfoDo) throws IllegalArgumentException;

    /**
     * 搜索物品类型前数据校验
     * @param productTypeDo
     */
    void validateProdTypeSearch(ProductTypeDo productTypeDo) throws IllegalArgumentException;

    /**
     * 搜索出售方式前数据校验
     * @param saleWayDo
     */
    void validateSaleWaySearch(SaleWayDo saleWayDo) throws IllegalArgumentException;

    /**
     * 搜索竞价记录前数据校验
     * @param biddingRecordDo
     */
    void validateBiddRecdSearch(BiddingRecordDo biddingRecordDo) throws IllegalArgumentException;

    /**
     * 插入竞价记录前数据校验
     * @param biddingRecordDo
     */
    void validateBiddRecdInsert(BiddingRecordDo biddingRecordDo) throws IllegalArgumentException;

    /**
     * 搜索议价记录前数据校验
     * @param bargainingRecordDo
     */
    void validateBargRecdSearch(BargainingRecordDo bargainingRecordDo) throws IllegalArgumentException;

    /**
     * 插入议价记录前数据校验
     * @param bargainingRecordDo
     */
    void validateBargRecdInsert(BargainingRecordDo bargainingRecordDo) throws IllegalArgumentException;
}
