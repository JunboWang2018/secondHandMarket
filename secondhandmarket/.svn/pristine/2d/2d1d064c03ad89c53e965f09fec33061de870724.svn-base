package cn.showclear.www.service.user.impl;

import cn.com.scooper.common.exception.BusinessException;
import cn.showclear.www.common.constant.Message;
import cn.showclear.www.dao.base.user.UserDao;
import cn.showclear.www.pojo.base.UserDo;
import cn.showclear.www.service.user.UserService;
import cn.showclear.www.service.validate.ValidateService;
import com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * @author Junbo Wang
 * @description
 * @date 2019/4/5
 */
@Service
public class UserServiceImpl implements UserService {
    private static final Logger log = LoggerFactory.getLogger(UserServiceImpl.class);

    @Autowired
    private UserDao userDao;

    @Autowired
    private ValidateService validateService;
    /**
     * 登录:
     *  1. 验证用户名和密码是否为空
     *  2. 根据用户名查询数据库
     *  3. 若返回值为空，则用户不存在。
     *  4. 若返回值不为空，判断密码是否正确。
     * @param userDo
     * @return
     */
    @Override
    public Message userLogin(UserDo userDo) {
        log.info("username = " + userDo.getUserName() + ", password = " + userDo.getPassword());
        validateService.validateUser(userDo);
        UserDo result = userDao.searchUser(userDo.getUserName());
        if (result == null) {
            log.info("user is not exist");
            return Message.USER_NOT_EXIST;
        } else if (!result.getPassword().equals(userDo.getPassword())) {
            log.info("login failed, password is not right");
            return  Message.PASSWORD_ERROR;

        } else {
            log.info("login success, put user to session");
            return Message.LOGIN_SUCCESS;
        }
    }

    /**
     * 注册:
     *  1. 验证用户名和密码是否为空
     *  2. 根据用户名查询数据库,判断用户名是否已存在
     *  3. 若用户名不存在，则插入新用户，返回值为受影响的行数
     *  4. 若行数为1，则插入成功，其他情况为插入失败
     * @param userDo
     * @return
     */
    @Override
    public Message userRegister(UserDo userDo) {
        log.info("username = " + userDo.getUserName() + ", password = " + userDo.getPassword());
        validateService.validateUser(userDo);
        //查询用户是否存在
        UserDo result = userDao.searchUser(userDo.getUserName());
        if (result != null) {
            log.info("username is exist");
            return Message.USER_IS_EXIST;
        }
        //注册
        Integer count = userDao.register(userDo);
        if (count == 1) {
            log.info("count = " + count + ", register success");
            return Message.REGISTER_SUCCESS;
        } else {
            log.info("count = " + count + ", register failed");
            return Message.REGISTER_FAILED;
        }
    }

    @Override
    public List<UserDo> searchUserList(UserDo userDo) {
        return userDao.searchUserListByCol(userDo);
    }

    @Override
    public UserDo searchUser(UserDo userDo) {
        List<UserDo> list = this.searchUserList(userDo);
        if (list.size() >= 0) {
            return list.get(0);
        } else {
            throw new BusinessException(Message.USER_NOT_EXIST.getCode(), Message.USER_NOT_EXIST.getMessage());
        }
    }
}
